'use strict';

const auth = require('./shared/better-auth.Cn-kIXzo.cjs');
const index = require('./shared/better-auth.ANpbi45u.cjs');
const misc = require('./shared/better-auth.BLDOwz3i.cjs');
const socialProviders_index = require('./shared/better-auth.l_Ru3SGW.cjs');
const id = require('./shared/better-auth.Bg6iw3ig.cjs');
const logger = require('./shared/better-auth.BToNb2fI.cjs');
const detectAuthConfig = require('./shared/better-auth.CzNBOMz8.cjs');
const betterCall = require('better-call');
require('./shared/better-auth.B0k5C6Ik.cjs');
require('zod');
require('./shared/better-auth.B6fIklBU.cjs');
require('@better-auth/utils/base64');
require('@better-auth/utils/hmac');
require('@better-auth/utils/binary');
require('@better-auth/core/db');
require('./shared/better-auth.Bu93hUoT.cjs');
require('kysely');
require('./api/index.cjs');
require('./shared/better-auth.anw-08Z3.cjs');
require('./shared/better-auth.C1hdVENX.cjs');
require('./shared/better-auth.Jlhc86WK.cjs');
require('./shared/better-auth.DxBcELEX.cjs');
require('@better-auth/utils/random');
require('@better-auth/utils/hash');
require('@noble/ciphers/chacha.js');
require('@noble/ciphers/utils.js');
require('jose');
require('@noble/hashes/scrypt.js');
require('@better-auth/utils/hex');
require('@noble/hashes/utils.js');
require('./shared/better-auth.CYeOI8C-.cjs');
require('./shared/better-auth.D1rR7ww4.cjs');
require('defu');
require('./crypto/index.cjs');
require('./shared/better-auth.DAx40NmY.cjs');
require('./shared/better-auth.S3hDEI-1.cjs');
require('./shared/better-auth.DhuXIuMp.cjs');
require('./shared/better-auth.B3DNJnq5.cjs');
require('./shared/better-auth.De2uf6ue.cjs');
require('./shared/better-auth.CDXNofOe.cjs');
require('@better-fetch/fetch');
require('jose/errors');
require('./shared/better-auth.uykCWCYS.cjs');



exports.betterAuth = auth.betterAuth;
exports.createTelemetry = auth.createTelemetry;
exports.BetterAuthError = index.BetterAuthError;
exports.MissingDependencyError = index.MissingDependencyError;
exports.capitalizeFirstLetter = misc.capitalizeFirstLetter;
exports.HIDE_METADATA = socialProviders_index.HIDE_METADATA;
exports.generateState = socialProviders_index.generateState;
exports.parseState = socialProviders_index.parseState;
exports.generateId = id.generateId;
exports.createLogger = logger.createLogger;
exports.levels = logger.levels;
exports.logger = logger.logger;
exports.shouldPublishLog = logger.shouldPublishLog;
exports.getTelemetryAuthConfig = detectAuthConfig.getTelemetryAuthConfig;
exports.APIError = betterCall.APIError;
